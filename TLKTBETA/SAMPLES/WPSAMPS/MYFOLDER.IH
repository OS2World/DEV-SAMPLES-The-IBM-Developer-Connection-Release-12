
/*
 * This file was generated by the SOM Compiler.
 * FileName: myfolder.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitih: 2.7
 */

/*
 * 
 * 
 *    Module Name: MYFOLDER
 * 
 *    OS/2 Work Place Shell Sample Program - SOM 2.0 / IDL Version
 * 
 *    Copyright (C) 1992, 1993 IBM Corporation
 * 
 *        DISCLAIMER OF WARRANTIES.  The following [enclosed] code is
 *        sample code created by IBM Corporation. This sample code is not
 *        part of any standard or IBM product and is provided to you solely
 *        for  the purpose of assisting you in the development of your
 *        applications.  The code is provided "AS IS", without
 *        warranty of any kind.  IBM shall not be liable for any damages
 *        arising out of your use of the sample code, even if they have been
 *        advised of the possibility of such damages.
 * 
 */


#ifndef SOM_MYFOLDER_ih
#define SOM_MYFOLDER_ih

#pragma checkout(suspend)

/*
 * Passthru lines: File: "C.ih", "before"
 */

   #define ID_CLOSEVIEWSMENU     (WPMENUID_USER+1) /* menus added to popup menu */

   #define IDM_CLOSEVIEWS        (WPMENUID_USER+2) /* submenus of added menus */


#include <myfolder.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass MYFOLDERCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define MYFOLDER_MaxNoMethods 1

/*
 * Instance data
 */
typedef void MYFOLDERData;

/*
 * Begin stuff that only goes in the primary file
 */
#if (defined(MYFOLDER_Class_Source) || defined(SOM_Module_myfolder_Source))

/*
 * Trace/Debug macro
 */
#ifndef MYFOLDERMethodDebug
   #define MYFOLDERMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* MYFOLDERMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_MYFOLDERCClassData.parentMtab
#undef SOMInstance
#define SOMInstance MYFOLDERCClassData.parentMtab

#ifndef M_MYFOLDER_Class_Source
   #define M_MYFOLDER_Class_Source
#endif    /* M_MYFOLDER_Class_Source */

/*
 * Overridden method: wpOpen
 */
#pragma linkage(myfold_wpOpen, system)
SOM_Scope HWND  SOMLINK myfold_wpOpen(MYFOLDER *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
#ifndef somMN_wpOpen_defined
#define somMN_wpOpen_defined
   static char *somMN_wpOpen = "wpOpen";
   static somId somId_wpOpen = &somMN_wpOpen;
#endif  /* somMN_wpOpen_defined */
#define MYFOLDER_parent_WPFolder_wpOpen(somSelf,hwndCnr,ulView,param) \
	((SOM_ParentNumResolve(WPObject, 1, MYFOLDERCClassData.parentMtab, wpOpen)) \
	 (somSelf,hwndCnr,ulView,param))
#ifndef SOMGD_pmc_WPFolder_wpOpen
  #ifdef parent_WPFolder_wpOpen
     #undef parent_WPFolder_wpOpen
     #define SOMGD_pmc_WPFolder_wpOpen 1
  #else
     #define parent_WPFolder_wpOpen MYFOLDER_parent_WPFolder_wpOpen
  #endif /* parent_WPFolder_wpOpen */
#endif /* SOMGD_pmc_WPFolder_wpOpen */
#ifndef parent_wpOpen
   #define parent_wpOpen(somSelf,hwndCnr,ulView,param) \
	((SOM_ParentNumResolve(WPObject, 1, SOM_CurrentClass, wpOpen)) \
	 (somSelf,hwndCnr,ulView,param))
#endif  /* parent_wpOpen */
#define MYFOLDER_parents_wpOpen(arg0,arg1,arg2,arg3) \
  (void) MYFOLDER_parent_WPFolder_wpOpen(arg0,arg1,arg2,arg3);

/*
 * Overridden method: wpModifyPopupMenu
 */
#pragma linkage(myfold_wpModifyPopupMenu, system)
SOM_Scope BOOL  SOMLINK myfold_wpModifyPopupMenu(MYFOLDER *somSelf,
		HWND hwndMenu,
		HWND hwndCnr,
		ULONG iPosition);
#ifndef somMN_wpModifyPopupMenu_defined
#define somMN_wpModifyPopupMenu_defined
   static char *somMN_wpModifyPopupMenu = "wpModifyPopupMenu";
   static somId somId_wpModifyPopupMenu = &somMN_wpModifyPopupMenu;
#endif  /* somMN_wpModifyPopupMenu_defined */
#define MYFOLDER_parent_WPFolder_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) \
	((SOM_ParentNumResolve(WPObject, 1, MYFOLDERCClassData.parentMtab, wpModifyPopupMenu)) \
	 (somSelf,hwndMenu,hwndCnr,iPosition))
#ifndef SOMGD_pmc_WPFolder_wpModifyPopupMenu
  #ifdef parent_WPFolder_wpModifyPopupMenu
     #undef parent_WPFolder_wpModifyPopupMenu
     #define SOMGD_pmc_WPFolder_wpModifyPopupMenu 1
  #else
     #define parent_WPFolder_wpModifyPopupMenu MYFOLDER_parent_WPFolder_wpModifyPopupMenu
  #endif /* parent_WPFolder_wpModifyPopupMenu */
#endif /* SOMGD_pmc_WPFolder_wpModifyPopupMenu */
#ifndef parent_wpModifyPopupMenu
   #define parent_wpModifyPopupMenu(somSelf,hwndMenu,hwndCnr,iPosition) \
	((SOM_ParentNumResolve(WPObject, 1, SOM_CurrentClass, wpModifyPopupMenu)) \
	 (somSelf,hwndMenu,hwndCnr,iPosition))
#endif  /* parent_wpModifyPopupMenu */
#define MYFOLDER_parents_wpModifyPopupMenu(arg0,arg1,arg2,arg3) \
  (void) MYFOLDER_parent_WPFolder_wpModifyPopupMenu(arg0,arg1,arg2,arg3);

/*
 * Overridden method: wpMenuItemSelected
 */
#pragma linkage(myfold_wpMenuItemSelected, system)
SOM_Scope BOOL  SOMLINK myfold_wpMenuItemSelected(MYFOLDER *somSelf,
		HWND hwndFrame,
		ULONG ulMenuId);
#ifndef somMN_wpMenuItemSelected_defined
#define somMN_wpMenuItemSelected_defined
   static char *somMN_wpMenuItemSelected = "wpMenuItemSelected";
   static somId somId_wpMenuItemSelected = &somMN_wpMenuItemSelected;
#endif  /* somMN_wpMenuItemSelected_defined */
#define MYFOLDER_parent_WPFolder_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) \
	((SOM_ParentNumResolve(WPObject, 1, MYFOLDERCClassData.parentMtab, wpMenuItemSelected)) \
	 (somSelf,hwndFrame,ulMenuId))
#ifndef SOMGD_pmc_WPFolder_wpMenuItemSelected
  #ifdef parent_WPFolder_wpMenuItemSelected
     #undef parent_WPFolder_wpMenuItemSelected
     #define SOMGD_pmc_WPFolder_wpMenuItemSelected 1
  #else
     #define parent_WPFolder_wpMenuItemSelected MYFOLDER_parent_WPFolder_wpMenuItemSelected
  #endif /* parent_WPFolder_wpMenuItemSelected */
#endif /* SOMGD_pmc_WPFolder_wpMenuItemSelected */
#ifndef parent_wpMenuItemSelected
   #define parent_wpMenuItemSelected(somSelf,hwndFrame,ulMenuId) \
	((SOM_ParentNumResolve(WPObject, 1, SOM_CurrentClass, wpMenuItemSelected)) \
	 (somSelf,hwndFrame,ulMenuId))
#endif  /* parent_wpMenuItemSelected */
#define MYFOLDER_parents_wpMenuItemSelected(arg0,arg1,arg2) \
  (void) MYFOLDER_parent_WPFolder_wpMenuItemSelected(arg0,arg1,arg2);

/*
 * Initialize the class data structure
 */
struct MYFOLDERClassDataStructure MYFOLDERClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct MYFOLDERCClassDataStructure MYFOLDERCClassData = {(somMethodTabs) NULL};

/*
 * New Method: CloseViews
 */
#pragma linkage(myfold_CloseViews, system)
SOM_Scope void  SOMLINK myfold_CloseViews(MYFOLDER *somSelf);
#ifndef somMN_CloseViews_defined
#define somMN_CloseViews_defined
static char *somMN_CloseViews = "CloseViews";
static somId somId_CloseViews = &somMN_CloseViews;
#endif  /* somMN_CloseViews_defined */
#ifndef somDS_CloseViews_defined
#define somDS_CloseViews_defined
static char *somDS_CloseViews = somMD_MYFOLDER_CloseViews;
static somId somDI_CloseViews = &somDS_CloseViews;
#endif  /* somDS_CloseViews_defined */
#define CloseViews_somApRdDefault

/*
 * Routines and Structures to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t MYFOLDERSM[] = {
    {    &MYFOLDERClassData.CloseViews,
         &somId_CloseViews,
         &somDI_CloseViews,
         (somMethodProc *) myfold_CloseViews,
         (somMethodProc *)((void*)-1),
#ifdef CloseViews_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*)&CloseViewsStubs) },
#endif
};


/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t MYFOLDEROM[] = {
    {    &somId_wpOpen,
         (somMethodProc *) myfold_wpOpen    },
    {    &somId_wpModifyPopupMenu,
         (somMethodProc *) myfold_wpModifyPopupMenu    },
    {    &somId_wpMenuItemSelected,
         (somMethodProc *) myfold_wpMenuItemSelected    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_MYFOLDER = "MYFOLDER";
static char * somPCN_MYFOLDER_WPFolder = "WPFolder";

static somId somPCMYFOLDER[] = {
    &somPCN_MYFOLDER_WPFolder,
};

static somStaticClassInfo MYFOLDERSCI = {
    3, 1, 3, 0, 0, 0,
    MYFOLDER_MajorVersion, MYFOLDER_MinorVersion,
    0, MYFOLDER_MaxNoMethods, 1,
    &somCN_MYFOLDER,
    (somId) NULL, 1,
    somPCMYFOLDER,
    (somClassDataStructure *) &MYFOLDERClassData,
    (somCClassDataStructure *) &MYFOLDERCClassData,
    MYFOLDERSM, MYFOLDEROM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0,
    0,  /* old style class, zero directinitclasses */
    0, /* no directinitclasses */
    0, /* number of methods */
    0, /* methods of the class */
    0, /* dataOffset1 */
    0, /* dataOffset2 */
    0, /* number of SelectInheritedMethods */
    0, /* SelectInheritedMethods */
    0, /* number of releaseorder entries */
    0, /* ReleaseOrder */
    0, /* number of migrated methods */
    0, /* migrated method implementations */
    0, /* number of initializers */
    0, /* initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


MYFOLDER * SOMLINK MYFOLDERNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    WPFolderNewClass(WPFolder_MajorVersion,WPFolder_MinorVersion);	/* static reference */
    return (somBuildClass(1,&MYFOLDERSCI, somtmajorVersion, somtminorVersion));
}

/*
 * Functions for attributes.
 */

#endif                   /* MYFOLDER_Class_Source */
#pragma checkout(resume)

#endif       /* SOM_MYFOLDER_ih */
