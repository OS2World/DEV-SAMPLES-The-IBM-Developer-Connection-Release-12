
/*
 * This file was generated by the SOM Compiler.
 * FileName: dragexam.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitih: 2.7
 */

/*
 * 
 * 
 *    Module Name: DRAGEXAM
 * 
 *    OS/2 Work Place Shell Sample Program - SOM 2.0 / IDL Version
 * 
 *    Copyright (C) 1993 IBM Corporation
 * 
 *        DISCLAIMER OF WARRANTIES.  The following [enclosed] code is
 *        sample code created by IBM Corporation. This sample code is not
 *        part of any standard or IBM product and is provided to you solely
 *        for  the purpose of assisting you in the development of your
 *        applications.  The code is provided "AS IS", without
 *        warranty of any kind.  IBM shall not be liable for any damages
 *        arising out of your use of the sample code, even if they have been
 *        advised of the possibility of such damages.
 * 
 */


#ifndef SOM_DRAGEXAM_ih
#define SOM_DRAGEXAM_ih

#pragma checkout(suspend)

#include <dragexam.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass DRAGEXAMCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define DRAGEXAM_MaxNoMethods 0

/*
 * Instance data
 */
typedef void DRAGEXAMData;

/*
 * Begin stuff that only goes in the primary file
 */
#if (defined(DRAGEXAM_Class_Source) || defined(SOM_Module_dragexam_Source))

/*
 * Trace/Debug macro
 */
#ifndef DRAGEXAMMethodDebug
   #define DRAGEXAMMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* DRAGEXAMMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_DRAGEXAMCClassData.parentMtab
#undef SOMInstance
#define SOMInstance DRAGEXAMCClassData.parentMtab

#ifndef M_DRAGEXAM_Class_Source
   #define M_DRAGEXAM_Class_Source
#endif    /* M_DRAGEXAM_Class_Source */

/*
 * Overridden method: wpFormatDragItem
 */
#pragma linkage(drag_wpFormatDragItem, system)
SOM_Scope BOOL  SOMLINK drag_wpFormatDragItem(DRAGEXAM *somSelf,
		PDRAGITEM pdrgItem);
#ifndef somMN_wpFormatDragItem_defined
#define somMN_wpFormatDragItem_defined
   static char *somMN_wpFormatDragItem = "wpFormatDragItem";
   static somId somId_wpFormatDragItem = &somMN_wpFormatDragItem;
#endif  /* somMN_wpFormatDragItem_defined */
#define DRAGEXAM_parent_WPDataFile_wpFormatDragItem(somSelf,pdrgItem) \
	((SOM_ParentNumResolve(WPObject, 1, DRAGEXAMCClassData.parentMtab, wpFormatDragItem)) \
	 (somSelf,pdrgItem))
#ifndef SOMGD_pmc_WPDataFile_wpFormatDragItem
  #ifdef parent_WPDataFile_wpFormatDragItem
     #undef parent_WPDataFile_wpFormatDragItem
     #define SOMGD_pmc_WPDataFile_wpFormatDragItem 1
  #else
     #define parent_WPDataFile_wpFormatDragItem DRAGEXAM_parent_WPDataFile_wpFormatDragItem
  #endif /* parent_WPDataFile_wpFormatDragItem */
#endif /* SOMGD_pmc_WPDataFile_wpFormatDragItem */
#ifndef parent_wpFormatDragItem
   #define parent_wpFormatDragItem(somSelf,pdrgItem) \
	((SOM_ParentNumResolve(WPObject, 1, SOM_CurrentClass, wpFormatDragItem)) \
	 (somSelf,pdrgItem))
#endif  /* parent_wpFormatDragItem */
#define DRAGEXAM_parents_wpFormatDragItem(arg0,arg1) \
  (void) DRAGEXAM_parent_WPDataFile_wpFormatDragItem(arg0,arg1);

/*
 * Initialize the class data structure
 */
struct DRAGEXAMClassDataStructure DRAGEXAMClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct DRAGEXAMCClassDataStructure DRAGEXAMCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */

/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t DRAGEXAMOM[] = {
    {    &somId_wpFormatDragItem,
         (somMethodProc *) drag_wpFormatDragItem    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_DRAGEXAM = "DRAGEXAM";
#ifndef somEMC_M_DRAGEXAM_defined
#define somEMC_M_DRAGEXAM_defined
static char * somEMC_M_DRAGEXAM = "M_DRAGEXAM";
#endif
static char * somPCN_DRAGEXAM_WPDataFile = "WPDataFile";

static somId somPCDRAGEXAM[] = {
    &somPCN_DRAGEXAM_WPDataFile,
};

static somStaticClassInfo DRAGEXAMSCI = {
    3, 0, 1, 0, 0, 0,
    DRAGEXAM_MajorVersion, DRAGEXAM_MinorVersion,
    0, DRAGEXAM_MaxNoMethods, 1,
    &somCN_DRAGEXAM,
    &somEMC_M_DRAGEXAM, 0,
    somPCDRAGEXAM,
    (somClassDataStructure *) &DRAGEXAMClassData,
    (somCClassDataStructure *) &DRAGEXAMCClassData,
    (somStaticMethod_t *) NULL, DRAGEXAMOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0,
    0,  /* old style class, zero directinitclasses */
    0, /* no directinitclasses */
    0, /* number of methods */
    0, /* methods of the class */
    0, /* dataOffset1 */
    0, /* dataOffset2 */
    0, /* number of SelectInheritedMethods */
    0, /* SelectInheritedMethods */
    0, /* number of releaseorder entries */
    0, /* ReleaseOrder */
    0, /* number of migrated methods */
    0, /* migrated method implementations */
    0, /* number of initializers */
    0, /* initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


DRAGEXAM * SOMLINK DRAGEXAMNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    WPDataFileNewClass(WPDataFile_MajorVersion,WPDataFile_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    M_DRAGEXAMNewClass(M_DRAGEXAM_MajorVersion,M_DRAGEXAM_MinorVersion);	/* static reference */
    return (somBuildClass(1,&DRAGEXAMSCI, somtmajorVersion, somtminorVersion));
}

/*
 * Functions for attributes.
 */

#endif                   /* DRAGEXAM_Class_Source */
#pragma checkout(resume)

#endif       /* SOM_DRAGEXAM_ih */

#ifndef SOM_M_DRAGEXAM_ih
#define SOM_M_DRAGEXAM_ih

#pragma checkout(suspend)

#include <dragexam.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
  #define SOM_Scope extern "C"
#else
  #define SOM_Scope extern
#endif  /* __cplusplus */
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass M_DRAGEXAMCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define M_DRAGEXAM_MaxNoMethods 0

/*
 * Instance data
 */
typedef void M_DRAGEXAMData;

/*
 * Begin stuff that only goes in the primary file
 */
#if (defined(M_DRAGEXAM_Class_Source) || defined(SOM_Module_dragexam_Source))

/*
 * Trace/Debug macro
 */
#ifndef M_DRAGEXAMMethodDebug
   #define M_DRAGEXAMMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* M_DRAGEXAMMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Overridden method: wpclsQueryTitle
 */
#pragma linkage(dragM_wpclsQueryTitle, system)
SOM_Scope PSZ  SOMLINK dragM_wpclsQueryTitle(M_DRAGEXAM *somSelf);
#ifndef somMN_wpclsQueryTitle_defined
#define somMN_wpclsQueryTitle_defined
   static char *somMN_wpclsQueryTitle = "wpclsQueryTitle";
   static somId somId_wpclsQueryTitle = &somMN_wpclsQueryTitle;
#endif  /* somMN_wpclsQueryTitle_defined */
#define M_DRAGEXAM_parent_M_WPDataFile_wpclsQueryTitle(somSelf) \
	((SOM_ParentNumResolve(M_WPObject, 1, M_DRAGEXAMCClassData.parentMtab, wpclsQueryTitle)) \
	 (somSelf))
#ifndef SOMGD_pmc_M_WPDataFile_wpclsQueryTitle
  #ifdef parent_M_WPDataFile_wpclsQueryTitle
     #undef parent_M_WPDataFile_wpclsQueryTitle
     #define SOMGD_pmc_M_WPDataFile_wpclsQueryTitle 1
  #else
     #define parent_M_WPDataFile_wpclsQueryTitle M_DRAGEXAM_parent_M_WPDataFile_wpclsQueryTitle
  #endif /* parent_M_WPDataFile_wpclsQueryTitle */
#endif /* SOMGD_pmc_M_WPDataFile_wpclsQueryTitle */
#ifndef parent_wpclsQueryTitle
   #define parent_wpclsQueryTitle(somSelf) \
	((SOM_ParentNumResolve(M_WPObject, 1, SOM_CurrentClass, wpclsQueryTitle)) \
	 (somSelf))
#endif  /* parent_wpclsQueryTitle */
#define M_DRAGEXAM_parents_wpclsQueryTitle(arg0) \
  (void) M_DRAGEXAM_parent_M_WPDataFile_wpclsQueryTitle(arg0);

/*
 * Initialize the class data structure
 */
struct M_DRAGEXAMClassDataStructure M_DRAGEXAMClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct M_DRAGEXAMCClassDataStructure M_DRAGEXAMCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */

/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_DRAGEXAMOM[] = {
    {    &somId_wpclsQueryTitle,
         (somMethodProc *) dragM_wpclsQueryTitle    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_M_DRAGEXAM = "M_DRAGEXAM";
static char * somPCN_M_DRAGEXAM_M_WPDataFile = "M_WPDataFile";

static somId somPCM_DRAGEXAM[] = {
    &somPCN_M_DRAGEXAM_M_WPDataFile,
};

static somStaticClassInfo M_DRAGEXAMSCI = {
    3, 0, 1, 0, 0, 0,
    M_DRAGEXAM_MajorVersion, M_DRAGEXAM_MinorVersion,
    0, M_DRAGEXAM_MaxNoMethods, 1,
    &somCN_M_DRAGEXAM,
    (somId) NULL, 1,
    somPCM_DRAGEXAM,
    (somClassDataStructure *) &M_DRAGEXAMClassData,
    (somCClassDataStructure *) &M_DRAGEXAMCClassData,
    (somStaticMethod_t *) NULL, M_DRAGEXAMOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0,
    0,  /* old style class, zero directinitclasses */
    0, /* no directinitclasses */
    0, /* number of methods */
    0, /* methods of the class */
    0, /* dataOffset1 */
    0, /* dataOffset2 */
    0, /* number of SelectInheritedMethods */
    0, /* SelectInheritedMethods */
    0, /* number of releaseorder entries */
    0, /* ReleaseOrder */
    0, /* number of migrated methods */
    0, /* migrated method implementations */
    0, /* number of initializers */
    0, /* initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


M_DRAGEXAM * SOMLINK M_DRAGEXAMNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    M_WPDataFileNewClass(M_WPDataFile_MajorVersion,M_WPDataFile_MinorVersion);	/* static reference */
    return (somBuildClass(1,&M_DRAGEXAMSCI, somtmajorVersion, somtminorVersion));
}

/*
 * Functions for attributes.
 */

#endif                   /* M_DRAGEXAM_Class_Source */
#pragma checkout(resume)

#endif       /* SOM_M_DRAGEXAM_ih */
