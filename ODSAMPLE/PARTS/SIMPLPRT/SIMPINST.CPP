/*
 *  This file was generated by the SOM Compiler and Emitter Framework.
 *  Generated using: 
 *      SOM Emitter emitxtm: 2.41
 */

#ifndef SOM_Module_simpinst_Source
#define SOM_Module_simpinst_Source
#endif
#define SimplePartInstall_Class_Source

#include "SimpInst.xih"
#include <odtypes.h>
#include <rmanager.xh>
#include <odprtreg.xh>
#include <iostream.h>

SOM_Scope void  SOMLINK SimplePartInstallRegister(SimplePartInstall *somSelf, 
                                                   Environment *ev)
{
    /* SimplePartInstallData *somThis = SimplePartInstallGetData(somSelf); */
    SimplePartInstallMethodDebug("SimplePartInstall","SimplePartInstallRegister");

    RegistryManager * registrationMgr;
    registrationMgr = new RegistryManager;

    ODPartHandlerRegistry * partRegistry;
    partRegistry = registrationMgr->GetODPartHandlerRegistry( ev);

    string className = "SimplePart";
    string dllName    = "Simplprt";

    long rc = partRegistry->RegisterPartHandlerClass( ev,
                                                      className,
                                                      dllName,
                                                      TRUE,
                                                      0);

    // returns 0 if successfully added, 4 if successfully replaced

    if( (rc == 0) || (rc == 4))
       cout << "Registration completed successfully \n";
    else
       cout << " Registration Failed .... rc = " << rc << "\n";

    // delete registrationMgr; Note: Can't delete SOMMSingleInstance metaclasses 
    return;
}

main(int argc, char *argv[], char *envp[])
{
   Environment * ev = somGetGlobalEnvironment();
   SimplePartInstall * s = new SimplePartInstall;;
   s->Register(ev);
}

